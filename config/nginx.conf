# nginx Configuration File - inspired by https://github.com/h5bp/server-configs-nginx

user www www;

worker_processes auto;
worker_rlimit_nofile 8192;

events {
  worker_connections 8000;
}

error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

http {
  client_max_body_size ${MAX_BODY_SIZE:-1m};

  server_tokens off;

  include       mime.types;
  default_type  application/octet-stream;

  # Update charset_types due to updated mime.types
  charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

  # Format to use in log files
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;

  keepalive_timeout 20;
  sendfile        on;
  tcp_nopush      on;
  gzip on;
  gzip_comp_level    5;
  gzip_min_length    256;
  gzip_proxied       any;
  gzip_vary          on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  open_file_cache          max=1000 inactive=20s;
  open_file_cache_valid    30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors   on;

  proxy_cache_path  /tmp/cache levels=1:2 keys_zone=S3_CACHE:${PROXY_KEY_SIZE:-10m} max_size=${PROXY_CACHE_SIZE:-500m} inactive=${PROXY_INACTIVE_AGE:-12h};
  proxy_temp_path /tmp/cache/temp;

  proxy_request_buffering off;

  server {
    listen [::]:80;
    listen 80;

    server_name _;

    charset utf-8;

    #resolver               172.31.0.2 valid=300s;
    resolver               8.8.8.8 valid=300s;
    resolver_timeout       10s;

    location / {
      # s3's builtin 'pretty urls' are only active via the s3-website endpoint!
      rewrite ^(.*)/$ $1/index.html last;

      proxy_pass https://${S3PROXY_BUCKET_NAME}.${S3PROXY_AWS_REGION:-s3}.amazonaws.com;

      aws_access_key ${S3PROXY_AWS_ACCESS_KEY};
      aws_secret_key ${S3PROXY_AWS_SECRET_KEY};
      s3_bucket ${S3PROXY_BUCKET_NAME};

      proxy_set_header Authorization $s3_auth_token;
      proxy_set_header x-amz-date $aws_date;

      proxy_http_version     1.1;

      # keep this world cookie free!
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";

      # hide s3 headers
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      x-amz-meta-s3cmd-attrs;

      # don't expose s3 error messages to client!
      proxy_intercept_errors on;

      # would you liked ETags with that? (hide them coming from s3)
      proxy_hide_header      ETag;
      etag off;

      # you have to decide here, turn buffering ON to use the cache!
      proxy_buffering        ${PROXY_BUFFERING:-on};

      proxy_cache            S3_CACHE;
      proxy_cache_valid      200 302 304 60m;
      proxy_cache_valid      404          1m;

      add_header X-Cache-Status $upstream_cache_status;

#      # Expire rules for static content
#      # cache.appcache, your document html and data
#      location ~* \.(?:manifest|appcache|html?|xml|json)$ {
#        expires -1;
#      }
#      # Feed
#      location ~* \.(?:rss|atom)$ {
#        expires 1h;
#        add_header Cache-Control "public";
#      }
#      # Media: images, icons, video, audio, HTC
#      location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
#        expires 1M;
#        access_log off;
#        add_header Cache-Control "public";
#      }
#      # CSS and Javascript
#      location ~* \.(?:css|js)$ {
#        expires 1y;
#        access_log off;
#        add_header Cache-Control "public";
#      }
    }
  }
}
